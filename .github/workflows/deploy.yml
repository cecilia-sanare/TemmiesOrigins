name: Validation

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - v*
    branches:
      - main

env:
  TO_VERSION: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Mods
        uses: actions/cache@v3
        with:
          path: ~/.cache/packwiz/cache
          key: ${{ runner.os }}-${{ hashFiles('mods/*') }}
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19.1'
      - name: Versioning
        run: sed -i "s/0.0.0-semantically-released.0/${TO_VERSION}/g" pack.toml
      - name: Install Packwiz
        run: go install github.com/packwiz/packwiz@latest
      - name: Generate Modrinth Pack
        run: packwiz mr export -o "TemmiesOriginsClient-${TO_VERSION}.mrpack"
      - uses: actions/upload-artifact@v3
        with:
          name: TemmiesOrigins
          path: TemmiesOriginsClient-*.mrpack
          if-no-files-found: error

  deploy:
    name: Deploy
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
      - name: Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitMode: true
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: TemmiesOrigins/TemmiesOriginsClient-$TO_VERSION.mrpack
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}